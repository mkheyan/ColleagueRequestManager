@page "/requests/{requestId:int}/viewResponse/{responseId:int}"
@using global::Models
@using Business.Repository.IRepository
@using Radzen.Blazor
@using Microsoft.AspNetCore.Http
@using System.Security.Claims
@inject NavigationManager navigationManager
@inject IToDoResponseRepository toDoResponseRepository
@inject IHttpContextAccessor contextAccessor

<div class="row mt-2 mb-5">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <div class="row mt-2 mb-5">
                    <h3 class="card-title text-info mb-3 ml-3 col-8">View Response</h3>
                    <div class="col-2">
                    @if (ToDoResponseModel.ResponderId == contextAccessor.HttpContext.User.FindFirstValue(ClaimTypes.NameIdentifier))
                    {
                        <NavLink href="@($"/requests/{requestId}/editResponse/{responseId}")" class="btn btn-info" style="margin-left:10px">Edit</NavLink>
                    }
                </div>
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-body">
                                <EditForm Model="ToDoResponseModel">
                                    <div class="form-group">
                                        <label>Responder</label>
                                        <InputText @bind-Value="ToDoResponseModel.Responder.Email" disabled="true" class="form-control"></InputText>
                                    </div>
                                    <div class="form-group">
                                        <label>Creation Date</label>
                                        <InputDate @bind-Value="ToDoResponseModel.CreationDate" disabled="true" class="form-control"></InputDate>
                                    </div>
                                    <div class="form-group">
                                        <label>Last Modified Date</label>
                                        <InputDate @bind-Value="ToDoResponseModel.LastModifiedDate" disabled="true" class="form-control"></InputDate>
                                    </div>
                                    <div class="form-group">
                                        <label>Response Text</label>
                                        <div class="col-xl-6">
                                            <div class="border" style="box-shadow: azure">
                                                @((MarkupString)ToDoResponseModel.ResponseText)
                                            </div>
                                        </div>
                                    </div>
                                    @if (ToDoResponseModel.Attachments != null && ToDoResponseModel.Attachments.Count > 0)
                                    {
                                        <div class="form-group" style="padding-top: 70px;">
                                            <div class="row">

                                                @{
                                                    int serial = 1;
                                                    foreach (var file in ToDoResponseModel.Attachments)
                                                    {
                                                        var url = file.AttachmentUrl;
                                                        <RadzenIcon Icon="description" />
                                                        <NavLink href="@url">@file.OriginalName</NavLink>
                                                        <br />

                                                        serial++;
                                                    }
                                                }
                                            </div>
                                        </div>
                                    }
                                    <div class="form-group">
                                        <NavLink href="@($"requests/{requestId}")" class="btn btn-secondary">Back to Request</NavLink>
                                    </div>
                                </EditForm>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int requestId { get; set; }
    [Parameter]
    public int? responseId { get; set; }
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }

    private ToDoResponseDto ToDoResponseModel { get; set; } = new ToDoResponseDto();


    protected override async Task OnInitializedAsync()
    {
        if (!authenticationState.Result.User.Identity.IsAuthenticated)
        {
            var uri = new Uri(navigationManager.Uri);
            navigationManager.NavigateTo($"/identity/account/login?returnUrl={uri.LocalPath}");
        }
        ToDoResponseModel = await toDoResponseRepository.GetToDoResponse(responseId.Value);
    }
}
